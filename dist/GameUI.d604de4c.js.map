{"version":3,"sources":["../src/engine/Configuration.ts","../src/engine/Cell.ts","../src/engine/Grid.ts","../src/engine/Snake.ts","../src/engine/Game.ts","../src/GameUI.ts"],"names":[],"mappings":";;AKAA;;AAMA;;AAEA,ALRO,IKQD,ALRO,SKQE,GAAG,EAAlB,ELR6B,GAAG,EAAzB;AKSP,AJTA,AGAA,AFAA,ACAA,IESM,AJTN,IAAA,CISW,GAAG,GAAd;AJTA,ADCO,IAAM,cAAc,GAAG,EAAvB;AKUP,AJXA,AGCA,AFEA,ACAA,IEQA,AHRA,ACAA,IDAA,CCAA,CEQA,EJXA;AIWA,AJPE,ADFK,AECP,ACAA,IHDa,KAAK,ECEhB,CDFmB,GCEnB,ADFK,CCEO,CAAZ,EAAuB,CAAvB,EAAgC;AIOlC,AJNI,AGHJ,AFCA,ACAA,SFES,CAAL,EIMJ,AHRA,ACAA,CFEa,CAAT;AIUF,AJTE,ADHG,AESL,ACTF,IHAa,KCGJ,CAAL,CISF,AHHA,ACTF,EFGa,ADHS,CCGlB,CCMF,CFTuB,AESX,ACTd,CEYE,CAAY,ALZP,CGAP,KEYE,EAAuC,GHHvC,CGGA,CHHwC,CGGS;AAC/C,AJTD,AGDH,AFDE,ACDA,ICEF,IAAA,CCUS,AHXP,ACDA,IAAA,EEYE,AHXF,CCDO,EEYS,AHXP,CACP,CCFS,GDEL,CGUJ,MFZK,CAAS,CAAT,CDEL,CAAS,ACFO,CAAX,CDEL,ACFF,EDEe,EAAb,CADO,EAEP,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAFO,EAGP,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAHO,EAIP,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAJO,EAKP,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CALO,CAAT;AGYE,ADXJ,AFOI,ACRF,SEYO,AHJA,ACRP,IEYE,AFZF,GEYc,AFZP,CAAC,GEYN,CFZU,CDQV,GAAqB,MCRf,CAAS,CAAT,EAAY,CAAZ,CAAD,CDQL,CCRsB,IAAI,UAAJ,CAAS,CAAT,EAAY,CAAZ,CAAjB,CAAP;AEaE,AJVJ,AGFA,AFQG,ACRD,IEYE,KJVJ,AEFE,GCAF,CHEA,KEFE,GAAuB,IEYA,CAAC,EFZxB,GEY6B,IAAL,CAAU,IAAV,CAAe,IAAf,CAAD,CAArB;AAEA,AJpBJ,AGcE,ADPA,CFPF,EAAA,CIoBI,KFbF,CEaQ,CAAC,ADNT,IAAA,CAAY,MDPZ,GAAgB,EEad,AFbF,CEa0B,CDN1B,EAAwC,MCMtC,EAAmC,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,CAAnC,EAA8D,KAA9D;AACA,ADdM,AFSR,ACRA,EDQA,EGKE,EHLF,CAAA,EETQ,ADCR,CEaQ,CAAC,GDdD,ECcN,AHLF,CETwB,AFSxB,ACRA,CCDQ,EDCG,CDQX,ACRA,GDQA,YAAA;AGMC,ADdO,AFSN,AC8DH,SCvES,AFSD,MAAL,CETM,AFSM,GETa,CFSzB,CAAiB,GETX,CFSe,UAAJ,CAAU,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,EAAzB,CAAV,EAAwC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,EAA3B,CAAxC,CAAjB;AEFA,AFGD,GAFD,MEDO,aAAL,GAAqB,aAArB;ACSF,ADRE,ADNF,EEcA,AFdA,KAAA,CEcA,AFdA,CEcA,ADRO,KAAL,GAAa,ADNf,CEcA,AFdA,CEcA,EDRmB,ECQnB,GAAA,IFdA,GCMe,ADNf,ECME,CCQG,IAAL,EAAiB,CFdJ,SAAb,EAAiC;AEe/B,ADRA,AFGF,ACTE,EDSF,IAAA,CAAA,CGKQ,CDRD,ADNA,ICML,ECQa,CDRD,AFGd,CAAA,CGKkB,AFdhB,ECMgB,CDNC,EEcI,MAAL,CAAY,ADRhB,AFGd,ACTE,CCMqB,EFGvB,GEH4B,ICQV,CAAuB,EHL3B,EGKI,CAAhB,CHLF,EEHc,AFGU,CEHtB;AACA,AFGA,ACTD,GAFD,MCQO,EFGE,KAAK,CEHZ,GAAgB,CAAhB,CFGO,CAAY,IAAZ,CAAiB,UAAA,KAAA,EAAK;AGK7B,ADPA,AFEiC,QGK7B,CDPC,ICOI,AHLwB,GEFjC,CCOI,CAAU,AHLwB,CEFvB,AFEwB,CAAN,GEFjC,EFE6C,IAAI,CGK7C,AHL8C,CGKvB,AHLM,IGK7B,AHLmD,CGKvD,EAAkC,EHL0B,CAAC,CAAN,IAAW,IAAI,CAAC,CAAtC;AGM/B,ADPH,AFCyE,ACP1E,EAAA,GDOS,ECPT,CAAA,GEaS,AHNuE,MCPhF,CAAA,EDOE,ECPF,GEaI,AFbJ,CEawB,OAApB,IFbJ;AEcI,AHNH,ACPC,GDKF,MCLO,EEaE,EFbP,CAAU,IAAV,CEaE,AFba,CEaC,IFbI,GEalB,CFbF;AEcE,ADPJ,EAAA,IAAA,CAAA,ICOS,KDPT,CAAA,GCOI,CAAe,IDPnB,GCOI,ADPJ,YAAA;ACQI,ADPF,AFCF,ACRE,EDQF,IAAA,CAAA,CCRM,GEcG,ADPA,EDPE,GCOG,AFCd,CAAA,GGMI,CAAe,ADPjB,ADPI,GAAgB,IEclB,AHNJ,CCR2B,EDQ3B,ECRsB,CAAU,MAA9B,CDQU,CCR2B,GDQvC,EAAsB;AGOlB,ADPH,AFCC,ACRE,GCKJ,KFGQ,GGMC,AFdA,EDQI,ECRT,CDQY,ACRF,IEcV,CAAe,AHNE,ACRjB,MDQY,CGMZ,AHNwB,IAAZ,CAAiB,UAAA,KAAA,EAAK;AGOlC,AHPsC,ACPvC,WEcM,EHPiC,KAAK,CAAC,CAAN,CGOtC,CAAgB,GHPkC,IGOlD,AHPsD,CAAC,CAAjB,IAAsB,KAAK,CAAC,CAAN,KAAY,IAAI,CAAC,CAAvC;AGQtC,ADPJ,AFDkF,EEClF,GFDgB,CEChB,AFDE,CECF,ICOS,IAAL,CAAU,ADPd,CAAA,KCOI,CAAiB,IAAjB,MDPJ,GAAA,YAAA;ACQG,ADPD,AFDA,ACNF,QDMQ,CAAC,EECA,CFDG,ACNL,ICOO,CFDG,ACNL,MDMA,CAAY,ECNxB,GCOE,EFDU,CAAoB,KAApB,CAAV;AEED,AFDC,ACNA,GCKF,MFCO,ECNA,IDML,CAAY,ECNZ,IDMA,CAAmB,CAAnB,EAAqB,CAArB;AGQA,AHPA,ACNE,IEaF,KHPK,GCNC,CDMN,ICNW,QEaU,CAAC,IFbhB,CEaqB,GFbC,CEaN,CAAU,IAAV,AFbpB,CEamC,CFbF,GEab,CAAD,CAArB;AACD,ADND,AFDC,ACNK,ECON,CCNA,AHAA,GEMA,CAAA,QDPW,CCOX,CAAA,EDPM,GAAY,IAAI,GCOtB,GAAA,IDPkB,CAAS,KCOd,ADPmB,ICOhC,ADP2B,CAAU,CCOZ,ADPE,GAAa,CAAtB,EAAyB,KAAK,IAAL,CAAU,CAAnC,CAAZ;ACQJ,ADPI,WCOG,KAAK,OAAL,IAAgB,IAAI,IAAI,KAAK,QAApC;ACOF,ADNC,AFDD,ACNK,EEaL,AHPA,CEDA,GFCA,CAAA,CGOA,CAAA,OHPA,CAAA,CGOA,CAAA,IHPA,GAAA,OGOA,GAAA,EHPA,QGOe,OAAf,EAAgD;AACxC,AHPN,QGOM,EAAA,CHPC,EGOD,GHPN,EGOM,IAAA,CAAA,gBAAA,EAAA;AAAA,ADLR,AFDC,ACPG,ECQJ,CFHA,GEGA,CAAA,CCKU,KAAA,AFbD,GEaC,ADLV,CAAA,ADRI,CEaM,CAAA,CFbM,GCQhB,CCKQ,AFbY,ECQpB,QDRgB,CAAS,CCQlB,IAAP,ADR8B,ECQX,EDRM,CAAU,CAAV,GAAa,CAAtB,EAAyB,KAAK,IAAL,CAAU,CAAnC,CAAZ;AEaI,ADJN,ADRE,QEYa,CDJV,IDRE,CEYQ,GAAA,ADJf,ECIe,CAAA,ADJC,IAAI,ECId,AFZJ,CCQqB,EDRA,GCQK,IDR1B,SCQqB,CAAmB,KAA1C;AAEA,AFFF,ACPI,EDOJ,IAAA,CAAA,EEEO,KAAL,CAAW,CFFb,CAAA,EEEE,OFFF,GAAA,YAAA;AGME,AHLA,IGKA,OAAO,AHLA,CGKC,IHLI,KGKZ,CHLA,EGKoB,SAApB;AACA,ADHA,AFFD,ACPC,GDKF,CGOE,OAAO,AFZF,CEYG,ADHA,KAAK,ADTb,GEYA,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,ADHf,EAAR,GCGA,EAA8B,MAA9B;AACD,ADHG,ADTE,GEON,QDES,CAAC,ADTA,CCSN,IDTW,aAAL,IAAsB,IAA1B,EAA+B;ACU/B,AFHR,ACNU,SDMV,IEGa,AFHb,ECNe,CCSP,GDTE,GAAY,IAAI,UAAJ,CAAS,KAAK,IAAL,CAAU,CAAnB,EAAsB,KAAK,IAAL,CAAU,CAAV,GAAa,CAAnC,CAAZ;AEaR,ADHM,AFvCR,AC8BU,CD9BV,CG0CE,CH1CF,KG0CE,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,OAAV,EAA2C;AACnC,AFZD,QEYC,EAAA,GAAA,KAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,ADHJ,QCGM,GDHD,CAAL,CCGM,GAAA,EAAA,CAAA,KAAF;AAAA,ADFF,ADTF,QEWa,KDFN,ADTF,CEWQ,GAAA,AFXb,CCSE,CCEW,ADFA,CCEA,AFXD,GCSV,CDTc,EEWZ,QFXQ,CAAS,KAAK,IAAL,CAAU,CAAnB,EAAsB,KAAK,IAAL,CAAU,CAAV,GAAa,CAAnC,CAAZ;ACUE,ADTF,aCSO,ADTF,KCSH,IAAc,GAAd,CDTF,GAAqB,MAArB;AEYF,ADFI,ADTF,IEWF,OAAO,CAAC,CDFC,GCET,CDFI,CAAU,CCEC,MAAM,GAAG,CDFpB,CAAsB,CCEX,GAAe,CDFC,KAAL,CAAW,ICErC,GDF0B,EAAtB;ACGJ,IAAA,OAAO,CAAC,YAAR,GAAuB,QAAvB;AACA,ADHI,ADRJ,IEWA,OAAO,AFXF,CEWG,ADHA,GDRR,ECQa,ICGb,ADHQ,CAAU,ECGE,IDHZ,EAAJ,ECGJ,ADH4B;ACI5B,ADHM,ADRF,IEWJ,OAAO,CAAC,AFXA,GCQG,EDRE,IEWb,CDHM,ECGc,MFXZ,IAAsB,MAA1B,EAAiC,MEWrC;AACA,ADHK,ADRC,IEWN,OAAO,CAAC,GFXG,IAAL,CEWN,CAAiB,CFXC,IAAI,IEWtB,EAA4B,IFXV,CEWe,AFXN,GEWS,CAApC,CFXgC,CEWO,GFXZ,CAAU,CAAnB,CEW2B,CFXL,EEWQ,CAAhD,EFX6C,IAAL,CAAU,CAAV,GAAa,CAAnC,CAAZ;AEYP,AFXO,GEGR;ADNE,ADIK;AEYP,ADJC,ECID,CDrBA,KCqBA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,OAAV,EAA2C;AACzC,AFZE,IEYF,OAAO,CAAC,CFZD,GEYP,CFZE,EEYa,CFZD,IEYM,AFZF,KEYH,GAAa,EFZd,CAAS,KAAK,EEY5B,EFZuB,CAAU,CAAnB,EAAsB,KAAK,IAAL,CAAU,CAAV,GAAa,CAAnC,CAAZ;AEaF,ADJF,ADRI,ECQJ,ECIE,EDJF,CAAA,ICIS,CAAC,CFZD,GCQT,CAAA,ICIE,GAAoB,EFZlB,CCQJ,EDRyB,CEYvB,ADJF,GDRI,SCQJ;ACKE,ADJA,ADRE,IEYF,IDJM,GCIC,CAAC,ADJE,GAAG,KAAK,ICIlB,CDJa,CAAW,CCID,KAAvB,CDJa,EAAb,CADF,CAEE;ACIA,IAAA,OAAO,CAAC,SAAR,GAAoB,wBAApB;AACA,ADHA,ADTA,IEYA,IDHI,GCGG,AFZF,CEYG,CDHC,IDTT,GEYA,CAAiB,CDHb,CAAe,ECGE,CAAC,CDHlB,KAAwB,ECGX,GAAgB,ADHA,KAAL,CAAW,ECGtB,EAAjB,EAA6C,CDHjB,GAAqB,CCGC,GDHtB,CAA0B,CCGtD,EAAyD,KAAK,EDHR,GCGtD,CDHsD,EAAI;ACI3D,ADJ+D,ADR5D,GEMJ,SFNQ,CCQwD,IAAI,ADRvD,CCQwD,CAAL,IAAU,IAAI,CAAC,CAAf,CDRxD,GCQ4E,CDRtD,GCQ0D,CAAC,CAAL,EDRhF,ECQ0F,ADRxD,ICQ4D,CAAC,CAAnC;AAAoC,ADP9F,KCOwB,CAA5B,EAAqG,ODP5F,IAAL,GAAY,IAAI,UAAJ,CAAS,KAAK,IAAL,CAAU,CAAV,GAAa,CAAtB,EAAyB,KAAK,IAAL,CAAU,CAAnC,CAAZ;AEaN,ADLI,ADPE,EEYN,MAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,OAAT,EAA0C;AACxC,ADLE,ADPC,QEYG,IAAI,CDLD,CAAC,CCKG,ADLX,KCKgB,IAAlB;ADJC,KAPH,CAUE;ACEM,AFZJ,QEYI,EAAA,GAAA,AFZC,IEYD,AFZJ,CEYI,EFZQ,IAAI,UEYZ,AFZQ,CAAS,CEYjB,IFZsB,IAAL,CAAU,CAAV,GAAa,CAAtB,EAAyB,KAAK,IAAL,CAAU,CAAnC,CAAZ;AEYI,AFXJ,QEWM,KAAA,AFXD,GEWC,EAAA,CAAA,KAAF,EFXJ,GAAqB,MAArB;AEWI,ADDN,ADTE,QEUa,ADDX,KAAK,CCCM,GAAA,ADDX,CAAU,CCCC,CAAA,MAAT,KDDF,CAAwB,IAAxB,CAAJ,EAAmC;ACC7B,ADAJ,AD7CJ,QE6CyB,KDAd,CAAP,GCAqB,GAAA,EAAA,CAAA,SAAjB;AAAA,ADCL,ADRF,GA5CD,ECuCA,CAeE,ECHkC,UAAA,GAAA,EAAA,CAAA,UAA5B;;AACN,AFPF,EAAA,KAAA,CEOQ,AFPR,SEOiB,AFPjB,CAAA,EEOoB,EFPpB,EEOwB,CFPxB,IEOE,QFPF;AESE,ADCA,ADTA,IEQA,KFRK,EEQE,ADCA,CCDC,ADCR,KDTA,IAAgB,CAAhB,CEQA,GAAsB,wBAAtB;AACA,ADCD,ADTA,GCRD,ADMA,CEUE,OAAO,CAAC,SAAR,GAAoB,SAApB;;AAEA,ADCF,ADRA,ECQA,ADRA,ICQA,CAAA,ADRA,CAAA,CEOO,IAAI,CAAC,EDCZ,CCDe,ADCf,ADRA,CEOE,AFPF,EEOkB,CAAC,GDCnB,CCDuB,AFPvB,ECQA,CDRA,EEOE,EAA4B,CAAC,IAAI,EDCnC,CDRA,MEOE,EAA4C;AAC1C,ADCF,ADRA,MEOE,GDCG,EDRE,EEOE,CAAC,ADCV,EDRY,ECQE,EDRd,ECQA,CCDE;AACA,ADCF,ADRD,GAFD,GESI,GDCG,ICDI,CAAC,MAAR,CAAe,CAAf,ADCF,CAAmB,CCDC,CAAlB,GDCF;ACAE,MAAA,OAAO,CAAC,MAAR,CAAe,CAAf,EAAkB,MAAlB;AACA,ADAF,ADPF,EAAA,IEOI,CFPJ,CCOM,ADPN,KEOW,ADAA,CCAC,GFPZ,CAAA,EEOI,KFPJ,CCOM,CAAmB,CDPzB,ICOM,GAA2B,GDPzB,IAAR,EAAkB,eCOhB,EAA0C;ACCzC,ADAC,ADPF,WCOO,ADPA,KAAP,QCOE,CAAmB,KAAnB,IAA4B,CAA5B;AACA,ADPH,GAFD,QCSS,IAAL,CAAU,IAAV;ACCF,ADAC,KAHD,ICGK,EDAE,ECAE,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,MAArB,EAA6B,CAAC,IAAI,UAAlC,EAA8C;AAC5C,ADAA,ADPJ,EAAA,IEOI,CFPJ,CAAA,GCOS,ECAE,CAAC,ADAR,GDPJ,CAAA,KEOI,OFPJ,GAAA,YAAA;AEQI,ADAD,ADPD,MEOE,KFPK,EEOE,CAAC,EFPE,IEOV,CAAe,CAAf,EAAkB,CAAlB,AFPF;AEQE,ADAH,ADPA,GCFD,ADAA,GESI,OAAO,CAAC,MAAR,CAAe,KAAf,EAAsB,CAAtB;AACA,MAAA,OAAO,CAAC,MAAR;AACD,ADAH,ADPA,ECOA,ADPA,ICOA,CAAA,ADPA,CAAA,QCOA,CAAA,ADPA,CAAA,ECOA,GAAA,EDPA,GAAA,OCOA,KDPA;AEQC,ADAC,ADPA,GEdF,MDqBO,EDPE,ECOP,GDPY,IAAZ;ACQD,ADPA,GCKD,ADPA;AEUA,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,OAAX,EAA4C;AACpC,ADAR,ADRF,ECQE,IAAA,CAAA,CCAQ,CFRV,CEQU,GAAA,CFRV,ECQE,CCAQ,ADAR,CCAQ,EDAR,GAAA,WCAQ,C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","file":"GameUI.d604de4c.js","sourceRoot":"..\\static","sourcesContent":["export const CELLS_HORIZONTAL = 80;\r\nexport const CELLS_VERTICAL = 40;\r\nexport const SPEED = 100;\r\nexport const MAX_LEVEL = 10;\r\n\r\nexport interface Configuration {\r\n  level: number;\r\n  speed: number;\r\n  nbCellsX: number;\r\n  nbCellsY: number;\r\n  width: number;\r\n  height: number;\r\n  cellWidth: number;\r\n  cellHeight: number;\r\n  apples: number;\r\n}\r\n","export class Cell {\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n","import { Cell } from \"./Cell\";\r\nimport { Configuration } from \"./Configuration\";\r\n\r\nexport class Grid {\r\n  private configuration: Configuration;\r\n  apples = [\r\n    new Cell(33, 22),\r\n    new Cell(35, 22),\r\n    new Cell(37, 22),\r\n    new Cell(39, 22),\r\n    new Cell(41, 22),\r\n  ];\r\n  constructor(configuration: Configuration) {\r\n    this.configuration = configuration;\r\n  }\r\n\r\n  seed(): void {\r\n    this.apples.push(new Cell (Math.floor(Math.random()*80), Math.floor(Math.random() * 40)))\r\n  }\r\n\r\n  isAppleInside(cell: Cell): boolean {\r\n    return this.apples.find(apple => apple.x === cell.x && apple.y == cell.y) !== undefined;\r\n  }\r\n\r\n  removeApple(cell: Cell): void {\r\n    const apple = this.apples.find(apple => apple.x === cell.x && apple.y === cell.y)!\r\n    const i = this.apples.indexOf(apple)\r\n    this.apples.splice(i,1)\r\n    this.seed()\r\n  }\r\n\r\n  isDone(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getApples(): Cell[] {\r\n    return this.apples\r\n  }\r\n}\r\n","import { Cell } from \"./Cell\";\r\nimport { Direction } from \"./Direction\";\r\n\r\nexport class Snake {\r\n  head = new Cell(2,0)\r\n  tail = [new Cell(0, 0), new Cell(1, 0)];\r\n  direction: Direction = 'Right';\r\n  tempDirection = '';\r\n  tailSize = 2\r\n\r\n  setDirection(direction: Direction) {\r\n    this.direction = direction\r\n  }\r\n\r\n  move() {\r\n    this.tail.push(this.head);\r\n    if (this.tailSize < this.tail.length){\r\n      this.tail.shift();\r\n    }\r\n    \r\n  switch(this.direction){\r\n    case 'Right':\r\n      if (this.tempDirection == 'Left'){\r\n        this.head = new Cell(this.head.x -1, this.head.y)\r\n        break\r\n      }\r\n      this.head = new Cell(this.head.x +1, this.head.y)\r\n      this.tempDirection = 'Right'\r\n      break\r\n\r\n    case 'Down':\r\n        if (this.tempDirection == 'Up'){\r\n          this.head = new Cell(this.head.x, this.head.y -1)\r\n          break\r\n        }\r\n      this.head = new Cell(this.head.x, this.head.y +1)\r\n      this.tempDirection = 'Down'\r\n      break\r\n\r\n    case 'Up':\r\n        if (this.tempDirection == 'Down'){\r\n          this.head = new Cell(this.head.x, this.head.y +1)\r\n          break\r\n        }\r\n      this.head = new Cell(this.head.x, this.head.y -1)\r\n      this.tempDirection = 'Up'\r\n      break\r\n\r\n    case 'Left':\r\n      if (this.tempDirection == 'Right'){\r\n        this.head = new Cell(this.head.x +1, this.head.y)\r\n        break\r\n      }\r\n      this.head = new Cell(this.head.x -1, this.head.y)\r\n      this.tempDirection = 'Left'\r\n      break\r\n  }\r\n  \r\n  }\r\n  grow() {\r\n    this.tailSize +=3;\r\n  }\r\n  \r\n\r\n  getHead(): Cell {\r\n    return this.head;\r\n  }\r\n\r\n  isSnake(cell: Cell): boolean {\r\n    return false;\r\n  }\r\n\r\n  getDirection(): Direction {\r\n    return this.direction;\r\n  }\r\n\r\n  getTail(): Cell[] {\r\n    return this.tail;\r\n  }\r\n}\r\n","import { Grid } from \"./Grid\";\r\nimport { Snake } from \"./Snake\";\r\nimport { Configuration, MAX_LEVEL } from \"./Configuration\";\r\nimport { Cell } from \"./Cell\";\r\nimport { restElement } from \"@babel/types\";\r\n\r\nexport class Game {\r\n  private score: number = 0;\r\n  private running: boolean = false;\r\n  private grid: Grid;\r\n  private snake: Snake;\r\n  private configuration: Configuration;\r\n  private nextTick: number;\r\n\r\n  constructor(configuration: Configuration) {\r\n    this.configuration = configuration;\r\n    this.snake = new Snake();\r\n    this.grid = new Grid(this.configuration);\r\n    this.nextTick = 0;\r\n    this.running = true;\r\n  }\r\n\r\n  getSnake(): Snake {\r\n    return this.snake;\r\n  }\r\n\r\n  getConfiguration() {\r\n    return this.configuration;\r\n  }\r\n\r\n  shouldUpdate(time: number): boolean {\r\n    return this.running && time >= this.nextTick;\r\n  }\r\n\r\n  update(time: number) {\r\n    this.nextTick = time + this.configuration.speed;\r\n\r\n    this.snake.move();\r\n\r\n    switch (this.checkState()) {\r\n      case -1:\r\n        this.die();\r\n        break;\r\n      case 1:\r\n        this.snake.grow();\r\n        this.score += 100;\r\n        this.grid.removeApple(this.snake.getHead());\r\n        if (this.grid.isDone()) {\r\n          this.levelUp();\r\n        }\r\n    }\r\n  }\r\n\r\n  checkState() {\r\n    const cell = this.snake.getHead();\r\n    // left the play area or ate itself??\r\n\r\n    if (this.isOutside(cell) || this.snake.getTail().find(tail => tail.x == cell.x && tail.y == cell.y)) {\r\n      // dead\r\n      return -1;\r\n    }\r\n    \r\n\r\n    // ate apple?\r\n    if (this.grid.isAppleInside(cell)) {\r\n      return 1;\r\n    }\r\n\r\n    // nothing special\r\n    return 0;\r\n  }\r\n\r\n  levelUp() {\r\n    this.score += 1000;\r\n    this.configuration.level++;\r\n    if (this.configuration.level < MAX_LEVEL) {\r\n      this.configuration.speed -= 7;\r\n      this.grid.seed();\r\n    } else {\r\n      this.win();\r\n    }\r\n  }\r\n\r\n  win() {\r\n    this.stop();\r\n  }\r\n\r\n  die() {\r\n    this.stop();\r\n  }\r\n\r\n  isOutside(cell: Cell) {\r\n    const { nbCellsX, nbCellsY } = this.configuration;\r\n    return cell.x < 0 || cell.x >= nbCellsX || cell.y < 0 || cell.y >= nbCellsY;\r\n  }\r\n\r\n  getScore(): number {\r\n    return this.score;\r\n  }\r\n\r\n  getGrid(): Grid {\r\n    return this.grid;\r\n  }\r\n\r\n  stop() {\r\n    this.running = false;\r\n  }\r\n}\r\n","import {\r\n  Configuration,\r\n  CELLS_HORIZONTAL,\r\n  CELLS_VERTICAL,\r\n  SPEED\r\n} from \"./engine/Configuration\";\r\nimport { Game } from \"./engine/Game\";\r\n\r\nconst CELL_SIZE = 20;\r\nconst SCALE = 2.0;\r\n\r\nclass GameUI {\r\n  private canvas: HTMLCanvasElement;\r\n  private game: Game;\r\n\r\n  constructor(canvas: HTMLCanvasElement, game: Game) {\r\n    this.canvas = canvas;\r\n    this.game = game;\r\n    requestAnimationFrame(this.draw.bind(this));\r\n\r\n    window.addEventListener(\"keydown\", this.onKeyDown.bind(this), false);\r\n    window.focus();\r\n  }\r\n\r\n  draw(time: number) {\r\n    const context = this.canvas.getContext(\"2d\")!;\r\n    if (this.game.shouldUpdate(time)) {\r\n      this.drawBackground(context);\r\n      this.drawGrid(context);\r\n      this.drawBrand(context);\r\n      this.drawScore(context);\r\n      this.drawSnake(context);\r\n      this.drawApples(context);\r\n      this.game.update(time);\r\n    }\r\n    requestAnimationFrame(this.draw.bind(this));\r\n  }\r\n\r\n  drawBackground(context: CanvasRenderingContext2D) {\r\n    const { width, height } = this.game.getConfiguration();\r\n\r\n    context.fillStyle = \"#4caf50\";\r\n    context.fillRect(0, 0, width, height);\r\n  }\r\n\r\n  drawBrand(context: CanvasRenderingContext2D) {\r\n    const { width, height } = this.game.getConfiguration();\r\n\r\n    context.font = height / 2.5 + \"px Roboto\";\r\n    context.textBaseline = \"middle\";\r\n    context.textAlign = \"center\";\r\n    context.fillStyle = \"rgba(255,255,255,0.75)\";\r\n    context.fillText(\"CODELEX\", width / 2, height / 2);\r\n  }\r\n\r\n  drawScore(context: CanvasRenderingContext2D) {\r\n    context.font = 35 * SCALE + \"px Arial\";\r\n    context.textAlign = \"left\";\r\n    context.textBaseline = \"top\";\r\n    context.fillStyle = \"rgba(255,255,255,0.75)\";\r\n    context.fillText(game.getScore().toString(), 10 * SCALE, 10 * SCALE);\r\n  }\r\n\r\n  drawGrid(context: CanvasRenderingContext2D) {\r\n    const game = this.game;\r\n    const { width, height, cellWidth, cellHeight } = game.getConfiguration();\r\n    const lineWidth = 1 * SCALE;\r\n\r\n    context.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n    context.lineWidth = lineWidth;\r\n\r\n    for (let x = 0; x <= width; x += cellWidth) {\r\n      context.beginPath();\r\n      context.moveTo(x, 0);\r\n      context.lineTo(x, height);\r\n      context.stroke();\r\n    }\r\n\r\n    for (let y = 0; y <= height; y += cellHeight) {\r\n      context.beginPath();\r\n      context.moveTo(0, y);\r\n      context.lineTo(width, y);\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  drawApples(context: CanvasRenderingContext2D) {\r\n    const { cellWidth, cellHeight } = game.getConfiguration();\r\n    const lineWidth = 1 * SCALE;\r\n\r\n    context.fillStyle = \"#e91e63\";\r\n    const apples = game.getGrid().getApples();\r\n    apples.forEach(cell =>\r\n      context.fillRect(\r\n        cellWidth * cell.x + lineWidth,\r\n        cellHeight * cell.y + lineWidth,\r\n        cellWidth - lineWidth * 2,\r\n        cellHeight - lineWidth * 2\r\n      )\r\n    );\r\n  }\r\n\r\n  drawSnake(context: CanvasRenderingContext2D) {\r\n    const snake = this.game.getSnake();\r\n    const { cellWidth, cellHeight } = this.game.getConfiguration();\r\n    // head\r\n    const size = (CELL_SIZE * SCALE) / 10;\r\n    const offset = (CELL_SIZE * SCALE) / 3;\r\n    const x = cellWidth * snake.getHead().x;\r\n    const y = cellHeight * snake.getHead().y;\r\n    context.fillStyle = \"#111111\";\r\n    context.fillRect(x, y, cellWidth, cellHeight);\r\n    // eyes\r\n    switch (snake.getDirection()) {\r\n      case \"Up\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(x + 2 * offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Down\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + 2 * offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(\r\n          x + 2 * offset,\r\n          y + 2 * offset,\r\n          size,\r\n          0,\r\n          2 * Math.PI,\r\n          false\r\n        );\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Right\":\r\n        context.beginPath();\r\n        context.arc(x + 2 * offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(\r\n          x + 2 * offset,\r\n          y + 2 * offset,\r\n          size,\r\n          0,\r\n          2 * Math.PI,\r\n          false\r\n        );\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Left\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(x + offset, y + 2 * offset, size, 0, 2 * Math.PI, false);\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n    }\r\n    // tail\r\n    context.fillStyle = \"#333333\";\r\n    const tail = snake.getTail();\r\n    tail.forEach(cell =>\r\n      context.fillRect(\r\n        cellWidth * cell.x,\r\n        cellHeight * cell.y,\r\n        cellWidth,\r\n        cellHeight\r\n      )\r\n    );\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent) {\r\n    const snake = this.game.getSnake();\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Up\");\r\n        break;\r\n      case \"ArrowDown\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Down\");\r\n        break;\r\n      case \"ArrowLeft\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Left\");\r\n        break;\r\n      case \"ArrowRight\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Right\");\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nconst createCanvas = (): HTMLCanvasElement => {\r\n  const container = document.getElementById(\"game\")!;\r\n  const canvas = document.createElement(\"Canvas\") as HTMLCanvasElement;\r\n  container.appendChild(canvas);\r\n\r\n  // canvas element size in the page\r\n  canvas.style.width = CELLS_HORIZONTAL * CELL_SIZE + \"px\";\r\n  canvas.style.height = CELLS_VERTICAL * CELL_SIZE + \"px\";\r\n\r\n  // image buffer size\r\n  canvas.width = CELLS_HORIZONTAL * CELL_SIZE * SCALE;\r\n  canvas.height = CELLS_VERTICAL * CELL_SIZE * SCALE;\r\n\r\n  return canvas;\r\n};\r\n\r\nconst createConfiguration = (canvas: HTMLCanvasElement): Configuration => {\r\n  return {\r\n    level: 0,\r\n    speed: SPEED,\r\n    width: canvas.width,\r\n    height: canvas.height,\r\n    nbCellsX: CELLS_HORIZONTAL,\r\n    nbCellsY: CELLS_VERTICAL,\r\n    cellWidth: canvas.width / CELLS_HORIZONTAL,\r\n    cellHeight: canvas.height / CELLS_VERTICAL,\r\n    apples: 5\r\n  };\r\n};\r\n\r\nconst canvas = createCanvas();\r\nconst configuration = createConfiguration(canvas);\r\nconst game = new Game(configuration);\r\n\r\nnew GameUI(canvas, game);\r\n"]}